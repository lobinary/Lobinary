/***** Lobxxx Translate Finished ******/
/*
 * Copyright (c) 2000, 2004, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */
package javax.print.attribute.standard;

import javax.print.attribute.Attribute;
import javax.print.attribute.EnumSyntax;
import javax.print.attribute.DocAttribute;
import javax.print.attribute.PrintRequestAttribute;
import javax.print.attribute.PrintJobAttribute;

/**
 * Class OrientationRequested is a printing attribute class, an enumeration,
 * that indicates the desired orientation for printed print-stream pages; it
 * does not describe the orientation of the client-supplied print-stream
 * pages.
 * <P>
 * For some document formats (such as <CODE>"application/postscript"</CODE>),
 * the desired orientation of the print-stream pages is specified within the
 * document data. This information is generated by a device driver prior to
 * the submission of the print job. Other document formats (such as
 * <CODE>"text/plain"</CODE>) do not include the notion of desired orientation
 * within the document data. In the latter case it is possible for the printer
 * to bind the desired orientation to the document data after it has been
 * submitted. It is expected that a printer would only support the
 * OrientationRequested attribute for some document formats (e.g.,
 * <CODE>"text/plain"</CODE> or <CODE>"text/html"</CODE>) but not others (e.g.
 * <CODE>"application/postscript"</CODE>). This is no different from any other
 * job template attribute, since a print job can always impose constraints
 * among the values of different job template attributes.
 *  However, a special mention
 * is made here since it is very likely that a printer will support the
 * OrientationRequested attribute for only a subset of the supported document
 * formats.
 * <P>
 * <B>IPP Compatibility:</B> The category name returned by
 * <CODE>getName()</CODE> is the IPP attribute name.  The enumeration's
 * integer value is the IPP enum value.  The <code>toString()</code> method
 * returns the IPP string representation of the attribute value.
 * <P>
 *
 * <p>
 *  类OrientationRequested是一个打印属性类,枚举,指示打印的打印流页面的所需方向;它不描述客户提供的打印流页面的方向。
 * <P>
 *  对于某些文档格式(如<CODE>"application / postscript"</CODE>),在文档数据中指定打印流页面的所需方向。该信息由设备驱动程序在提交打印作业之前生成。
 * 其他文档格式(例如<CODE>"text / plain"</CODE>)不包括文档数据中所需方向的概念。在后一种情况下,打印机可以在文档数据提交之后将期望的方向绑定到文档数据。
 * 预期打印机只支持某些文档格式(例如,<CODE>"text / plain"</CODE>或<CODE>"text / html"</CODE>)的OrientationRequested属性, <CODE>
 * "application / postscript"</CODE>)。
 * 其他文档格式(例如<CODE>"text / plain"</CODE>)不包括文档数据中所需方向的概念。在后一种情况下,打印机可以在文档数据提交之后将期望的方向绑定到文档数据。
 * 这与任何其他作业模板属性没有区别,因为打印作业可以始终在不同作业模板属性的值之间施加约束。
 * 然而,这里特别提到,因为很可能打印机将仅支持所支持的文档格式的一个子集的OrientationRequested属性。
 * <P>
 * <B> IPP兼容性：</B> <CODE> getName()</CODE>返回的类别名称是IPP属性名称。枚举的整数值是IPP枚举值。
 *  <code> toString()</code>方法返回属性值的IPP字符串表示形式。
 * <P>
 * 
 * 
 * @author  Alan Kaminsky
 */
public final class OrientationRequested extends EnumSyntax
    implements DocAttribute, PrintRequestAttribute, PrintJobAttribute {

    private static final long serialVersionUID = -4447437289862822276L;

    /**
     * The content will be imaged across the short edge of the medium.
     * <p>
     *  内容将跨越介质的短边缘成像。
     * 
     */
    public static final OrientationRequested
        PORTRAIT = new OrientationRequested(3);

    /**
     * The content will be imaged across the long edge of the medium.
     * Landscape is defined to be a rotation of the print-stream page to be
     * imaged by +90 degrees with respect to the medium
     * (i.e. anti-clockwise) from the
     * portrait orientation. <I>Note:</I> The +90 direction was chosen because
     * simple finishing on the long edge is the same edge whether portrait or
     * landscape.
     * <p>
     *  内容将跨越介质的长边成像。横向被定义为要从纵向取向相对于介质(即,逆时针)成像+90度的打印流页面的旋转。 <I>注意：</I>选择+90方向是因为长边上的简单整理是相同的边缘,无论是纵向还是横向。
     * 
     */
    public static final OrientationRequested
        LANDSCAPE = new OrientationRequested(4);

    /**
     * The content will be imaged across the long edge of the medium, but in
     * the opposite manner from landscape. Reverse-landscape is defined to be
     * a rotation of the print-stream page to be imaged by -90 degrees with
     * respect to the medium (i.e. clockwise) from the portrait orientation.
     * <I>Note:</I> The REVERSE_LANDSCAPE value was added because some
     * applications rotate landscape -90 degrees from portrait, rather than
     * +90 degrees.
     * <p>
     *  内容将跨越介质的长边缘成像,但是以与景观相反的方式成像。反向景观被定义为要从纵向方向相对于介质(即顺时针)成像-90度的打印流页面的旋转。
     *  <I>注意：</I>添加了REVERSE_LANDSCAPE值,因为某些应用程序从横向旋转横向-90度,而不是从+90度。
     * 
     */
    public static final OrientationRequested
        REVERSE_LANDSCAPE = new OrientationRequested(5);

    /**
     * The content will be imaged across the short edge of the medium, but in
     * the opposite manner from portrait. Reverse-portrait is defined to be a
     * rotation of the print-stream page to be imaged by 180 degrees with
     * respect to the medium from the portrait orientation. <I>Note:</I> The
     * REVERSE_PORTRAIT value was added for use with the {@link
     * Finishings Finishings} attribute in cases where the
     * opposite edge is desired for finishing a portrait document on simple
     * finishing devices that have only one finishing position. Thus a
     * <CODE>"text/plain"</CODE> portrait document can be stapled "on the
     * right" by a simple finishing device as is common use with some
     * Middle Eastern languages such as Hebrew.
     * <p>
     * 内容将跨越介质的短边缘成像,但是以与肖像相反的方式成像。反向肖像被定义为要从纵向取向相对于介质成像180度的打印流页面的旋转。
     *  <I>注意：</I>在需要使用相对边缘以在仅具有一个完成位置的简单完成设备上完成纵向文档的情况下,添加REVERSE_PORTRAIT值以与{@link Finishings Finishings}属
     * 性一起使用。
     * 内容将跨越介质的短边缘成像,但是以与肖像相反的方式成像。反向肖像被定义为要从纵向取向相对于介质成像180度的打印流页面的旋转。
     * 因此,通过简单的整理装置可以将"CODE""text / plain"</CODE>肖像文档装订在"右边",这是一些中东语言如希伯来语的常见用法。
     * 
     */
    public static final OrientationRequested
        REVERSE_PORTRAIT = new OrientationRequested(6);

    /**
     * Construct a new orientation requested enumeration value with the given
     * integer value.
     *
     * <p>
     *  使用给定的整数值构造新的方向请求的枚举值。
     * 
     * 
     * @param  value  Integer value.
     */
    protected OrientationRequested(int value) {
        super(value);
    }

    private static final String[] myStringTable = {
        "portrait",
        "landscape",
        "reverse-landscape",
        "reverse-portrait"
    };

    private static final OrientationRequested[] myEnumValueTable = {
        PORTRAIT,
        LANDSCAPE,
        REVERSE_LANDSCAPE,
        REVERSE_PORTRAIT
    };

    /**
     * Returns the string table for class OrientationRequested.
     * <p>
     *  返回类OrientationRequested的字符串表。
     * 
     */
    protected String[] getStringTable() {
        return myStringTable;
    }

    /**
     * Returns the enumeration value table for class OrientationRequested.
     * <p>
     *  返回类OrientationRequested的枚举值表。
     * 
     */
    protected EnumSyntax[] getEnumValueTable() {
        return myEnumValueTable;
    }

    /**
     * Returns the lowest integer value used by class OrientationRequested.
     * <p>
     *  返回类OrientationRequested使用的最小整数值。
     * 
     */
    protected int getOffset() {
        return 3;
    }

    /**
     * Get the printing attribute class which is to be used as the "category"
     * for this printing attribute value.
     * <P>
     * For class OrientationRequested, the
     * category is class OrientationRequested itself.
     *
     * <p>
     *  获取要用作此打印属性值的"类别"的打印属性类。
     * <P>
     *  对于OrientationRequested类,类别是OrientationRequested类本身。
     * 
     * 
     * @return  Printing attribute class (category), an instance of class
     *          {@link java.lang.Class java.lang.Class}.
     */
    public final Class<? extends Attribute> getCategory() {
        return OrientationRequested.class;
    }

    /**
     * Get the name of the category of which this attribute value is an
     * instance.
     * <P>
     * For class OrientationRequested, the
     * category name is <CODE>"orientation-requested"</CODE>.
     *
     * <p>
     *  获取此属性值为实例的类别的名称。
     * <P>
     * 
     * @return  Attribute category name.
     */
    public final String getName() {
        return "orientation-requested";
    }

}
