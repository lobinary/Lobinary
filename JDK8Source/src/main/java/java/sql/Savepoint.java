/***** Lobxxx Translate Finished ******/
/*
 * Copyright (c) 2000, 2005, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package java.sql;

/**
 * The representation of a savepoint, which is a point within
 * the current transaction that can be referenced from the
 * <code>Connection.rollback</code> method. When a transaction
 * is rolled back to a savepoint all changes made after that
 * savepoint are undone.
 * <p>
 * Savepoints can be either named or unnamed. Unnamed savepoints
 * are identified by an ID generated by the underlying data source.
 *
 * <p>
 *  保存点的表示,它是当前事务中可以从<code> Connection.rollback </code>方法引用的点。当事务回滚到保存点时,在该保存点后进行的所有更改都将撤消。
 * <p>
 *  保存点可以命名或未命名。未命名的保存点由基础数据源生成的ID标识。
 * 
 * 
 * @since 1.4
 */

public interface Savepoint {

    /**
     * Retrieves the generated ID for the savepoint that this
     * <code>Savepoint</code> object represents.
     * <p>
     *  检索此<code> Savepoint </code>对象表示的保存点的生成的ID。
     * 
     * 
     * @return the numeric ID of this savepoint
     * @exception SQLException if this is a named savepoint
     * @since 1.4
     */
    int getSavepointId() throws SQLException;

    /**
     * Retrieves the name of the savepoint that this <code>Savepoint</code>
     * object represents.
     * <p>
     *  检索此<code> Savepoint </code>对象表示的保存点的名称。
     * 
     * @return the name of this savepoint
     * @exception SQLException if this is an un-named savepoint
     * @since 1.4
     */
    String getSavepointName() throws SQLException;
}
