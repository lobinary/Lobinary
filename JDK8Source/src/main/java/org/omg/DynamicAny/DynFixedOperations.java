/***** Lobxxx Translate Finished ******/
package org.omg.DynamicAny;


/**
* org/omg/DynamicAny/DynFixedOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from c:/re/workspace/8-2-build-windows-amd64-cygwin/jdk8u45/3627/corba/src/share/classes/org/omg/DynamicAny/DynamicAny.idl
* Thursday, April 30, 2015 12:42:08 PM PDT
*/


/**
    * DynFixed objects support the manipulation of IDL fixed values.
    * Because IDL does not have a generic type that can represent fixed types with arbitrary
    * number of digits and arbitrary scale, the operations use the IDL string type.
    * <p>
    *  DynFixed对象支持对IDL固定值的操作。因为IDL没有可以表示具有任意数量的数字和任意比例的固定类型的通用类型,所以操作使用IDL字符串类型。
    * 
    */
public interface DynFixedOperations  extends org.omg.DynamicAny.DynAnyOperations
{

  /**
        * Returns the value of a DynFixed.
        * <p>
        *  返回DynFixed的值。
        * 
        */
  String get_value ();

  /**
        * Sets the value of the DynFixed.
        * The val string must contain a fixed string constant in the same format as used for IDL fixed-point literals.
        * However, the trailing d or D is optional. The return value is true if val can be represented as the DynFixed
        * without loss of precision. If val has more fractional digits than can be represented in the DynFixed,
        * fractional digits are truncated and the return value is false.
        *
        * <p>
        *  设置DynFixed的值。 val字符串必须包含与IDL定点文字使用的格式相同的固定字符串常量。但是,尾随d或D是可选的。如果val可以表示为DynFixed而不损失精度,则返回值为true。
        * 如果val具有比在DynFixed中可以表示的更多的小数位数,则小数数字将被截断,返回值为false。
        * 
        * @exception TypeMismatch If val does not contain a valid fixed-point literal or contains extraneous
        *            characters other than leading or trailing white space
        * @exception InvalidValue If val contains a value whose scale exceeds that of the DynFixed
        *            or is not initialized
        */
  boolean set_value (String val) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue;
} // interface DynFixedOperations
