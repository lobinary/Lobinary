/***** Lobxxx Translate Finished ******/
package org.omg.DynamicAny;


/**
* org/omg/DynamicAny/DynEnumOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from c:/re/workspace/8-2-build-windows-amd64-cygwin/jdk8u45/3627/corba/src/share/classes/org/omg/DynamicAny/DynamicAny.idl
* Thursday, April 30, 2015 12:42:08 PM PDT
*/


/**
    * DynEnum objects support the manipulation of IDL enumerated values.
    * The current position of a DynEnum is always -1.
    * <p>
    *  DynEnum对象支持对IDL枚举值的操作。 DynEnum的当前位置始终为-1。
    * 
    */
public interface DynEnumOperations  extends org.omg.DynamicAny.DynAnyOperations
{

  /**
        * Returns the value of the DynEnum as an IDL identifier.
        * <p>
        *  返回DynEnum的值作为IDL标识符。
        * 
        */
  String get_as_string ();

  /**
        * Sets the value of the DynEnum to the enumerated value whose IDL identifier is passed in the value parameter.
        *
        * <p>
        *  将DynEnum的值设置为在value参数中传递IDL标识符的枚举值。
        * 
        * 
        * @exception InvalidValue If value contains a string that is not a valid IDL identifier
        *            for the corresponding enumerated type
        */
  void set_as_string (String value) throws org.omg.DynamicAny.DynAnyPackage.InvalidValue;

  /**
        * Returns the value of the DynEnum as the enumerated value's ordinal value.
        * Enumerators have ordinal values 0 to n-1, as they appear from left to right
        * in the corresponding IDL definition.
        * <p>
        *  返回DynEnum的值作为枚举值的序数值。枚举器的顺序值为0到n-1,因为它们在相应的IDL定义中从左到右出现。
        * 
        */
  int get_as_ulong ();

  /**
        * Sets the value of the DynEnum as the enumerated value's ordinal value.
        *
        * <p>
        *  将DynEnum的值设置为枚举值的序数值。
        * 
        * @exception InvalidValue If value contains a value that is outside the range of ordinal values
        *            for the corresponding enumerated type
        */
  void set_as_ulong (int value) throws org.omg.DynamicAny.DynAnyPackage.InvalidValue;
} // interface DynEnumOperations
