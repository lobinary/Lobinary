/***** Lobxxx Translate Finished ******/
package org.omg.PortableInterceptor;


/**
* org/omg/PortableInterceptor/InterceptorOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from c:/re/workspace/8-2-build-windows-amd64-cygwin/jdk8u45/3627/corba/src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
* Thursday, April 30, 2015 12:42:09 PM PDT
*/


/**
   * All Portable Interceptors implement Interceptor.
   * <p>
   *  所有便携式拦截器实现拦截器。
   * 
   */
public interface InterceptorOperations 
{

  /**
     * Returns the name of the interceptor.
     * <p>
     * Each Interceptor may have a name that may be used administratively 
     * to order the lists of Interceptors. Only one Interceptor of a given 
     * name can be registered with the ORB for each Interceptor type. An 
     * Interceptor may be anonymous, i.e., have an empty string as the name 
     * attribute. Any number of anonymous Interceptors may be registered with 
     * the ORB.
     *
     * <p>
     *  返回拦截器的名称。
     * <p>
     *  每个拦截器可以具有可以在管理上用于排序拦截器列表的名称。对于每个拦截器类型,只能向ORB注册给定名称的一个拦截器。拦截器可以是匿名的,即,具有空字符串作为名称属性。
     * 任何数量的匿名拦截器可以向ORB注册。
     * 
     * 
     * @return the name of the interceptor.
     */
  String name ();

  /**
     * Provides an opportunity to destroy this interceptor.
     * The destroy method is called during <code>ORB.destroy</code>. When an 
     * application calls <code>ORB.destroy</code>, the ORB:
     * <ol>
     *   <li>waits for all requests in progress to complete</li>
     *   <li>calls the <code>Interceptor.destroy</code> operation for each 
     *       interceptor</li>
     *   <li>completes destruction of the ORB</li>
     * </ol>
     * Method invocations from within <code>Interceptor.destroy</code> on 
     * object references for objects implemented on the ORB being destroyed 
     * result in undefined behavior. However, method invocations on objects 
     * implemented on an ORB other than the one being destroyed are 
     * permitted. (This means that the ORB being destroyed is still capable 
     * of acting as a client, but not as a server.) 
     * <p>
     *  提供一个机会来销毁这个拦截器。 destroy方法在<code> ORB.destroy </code>期间调用。当应用程序调用<code> ORB.destroy </code>时,ORB：
     * <ol>
     *  <li>等待所有正在进行的请求完成</li> <li>为每个拦截器调用<code> Interceptor.destroy </code>操作</li> <li>
     * </ol>
     */
  void destroy ();
} // interface InterceptorOperations
